#!/usr/bin/env bash

file=$(mktemp)
loadc_op=$(echo -e '\x01')
add_op=$(echo -e '\x02')
mkbasic_op=$(echo -e '\x06')
getbasic_op=$(echo -e '\x07')
jump_op=$(echo -e '\x0B')
pushloc_op=$(echo -e '\x0D')
mkvec_op=$(echo -e '\x0E')
pushglob_op=$(echo -e '\x0F')
slide_op=$(echo -e '\x13')
mkfunval_op=$(echo -e '\x14')
targ_op=$(echo -e '\x15')
return_op=$(echo -e '\x16')
mark_op=$(echo -e '\x17')
apply_op=$(echo -e '\x18')
alloc_op=$(echo -e '\x19')
rewrite_op=$(echo -e '\x1A')
nil_op=$(echo -e '\x1D')
cons_op=$(echo -e '\x1E')
tlist_op=$(echo -e '\x1F')

# let rec addList = fun l ->
#   match l with
#     [] -> 0
#     h :: t -> h + (addList t)
#
# in (addList [10, 1]) + (addList [])
#
# [10, 1] == Cons 10 (Cons 1 Nil)
# [] == Nil

echo -e \
"$alloc_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$pushloc_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mkvec_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mkfunval_op"\
"\x2D\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$jump_op"\
"\xC6\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$targ_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$pushloc_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$tlist_op"\
"\x63\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$loadc_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mkbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$jump_op"\
"\xBD\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$pushloc_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$getbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mark_op"\
"\x99\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$pushloc_op"\
"\x02\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$pushglob_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$apply_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$getbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$add_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mkbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$slide_op"\
"\x02\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$return_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$rewrite_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mark_op"\
"\x29\x01\x00\x00"\
"\x00\x00\x00\x00"\
"$loadc_op"\
"\x0A\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mkbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$loadc_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mkbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$nil_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$cons_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$cons_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$pushloc_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$apply_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$getbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$mark_op"\
"\x56\x01\x00\x00"\
"\x00\x00\x00\x00"\
"$nil_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$pushloc_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$apply_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$getbasic_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$add_op"\
"\x00\x00\x00\x00"\
"\x00\x00\x00\x00"\
"$slide_op"\
"\x01\x00\x00\x00"\
"\x00\x00\x00\x00"\
"\x00" > "$file"

./build/fm "$file"
result="$?"

if [[ "$result" -ne 11 ]]; then
  echo "tests/lists failure: expected $result to equal 11"
  exit 1
fi
